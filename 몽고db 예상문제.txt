(1~7번은 실기, 8~10번은 필기입니다.)

1. 레벨이 20이상인 캐릭터의 이름, 직업, 체력, 마력, 레벨을 출력하시오
정답 : db.games.find({level:{$gte:20}},{name:1, job:1, hp:1, mp:1, level:1, _id:0})

{ "name" : "hjs122", "job" : "warrior", "hp" : 10000, "mp" : 2500, "level" : 20 }
{ "name" : "hjs133", "job" : "warrior", "hp" : 15000, "mp" : 4000, "level" : 30 }
{ "name" : "hjs311", "job" : "magician", "hp" : 5000, "mp" : 12000, "level" : 25 }
{ "name" : "hjs411", "job" : "magician", "hp" : 4300, "mp" : 10000, "level" : 22 }
{ "name" : "hjs115", "job" : "archer", "hp" : 7900, "mp" : 8500, "level" : 31 }
{ "name" : "hjs116", "job" : "archer", "hp" : 5300, "mp" : 5500, "level" : 20 }
{ "name" : "hjs141", "job" : "assassin", "hp" : 6700, "mp" : 4900, "level" : 20 }
{ "name" : "hjs334", "job" : "gunner", "hp" : 4800, "mp" : 5700, "level" : 20 }
{ "name" : "hjs335", "job" : "gunner", "hp" : 5400, "mp" : 6700, "level" : 26 }
{ "name" : "hjs336", "job" : "gunner", "hp" : 5900, "mp" : 7200, "level" : 28 }
{ "name" : "hjs338", "job" : "gunner", "hp" : 6500, "mp" : 8100, "level" : 32 }


2. 2차 전직이 가능한 캐릭터의 이름, 직업, 체력, 마력, 레벨을 출력하시오
(2차 전직은 레벨 30이상이면서 hp가 8000이상이거나 mp가 8000이상 경우를 말한다.)
db.games.find({level:{$gte:30},$or:[{hp:{$gte:8000}},{mp:{$gte:8000}}]},{name:1, job:1, hp:1, mp:1, level:1, _id:0})

{ "name" : "hjs133", "job" : "warrior", "hp" : 15000, "mp" : 4000, "level" : 30 }
{ "name" : "hjs115", "job" : "archer", "hp" : 7900, "mp" : 8500, "level" : 31 }
{ "name" : "hjs338", "job" : "gunner", "hp" : 6500, "mp" : 8100, "level" : 32 }

3. 캐릭터 중에서 스킬트리를 3개 보유하고 있고 2번째 스킬이
doubleshot이거나 doublefire인 캐릭터의 총 인원수를 구하시오
(2번째 스킬이란 스킬트리가 [1,2,3]으로 되어 있을 때 2번째 위치인 2를 말하는 것이다.)
db.games.find({skill:{$size:3},"skill.1":/double/}).count()
4

4. high라는 이름으로 시작하는 무기를 가진 캐릭터의 이름, 직업, 레벨, 무기를 출력하시오
db.games.find({"equipment.weapon":/^high/},{name:1, job:1, level:1, "equipment.weapon":1, _id:0})

{ "name" : "hjs122", "job" : "warrior", "level" : 20, "equipment" : [ { "weapon" : "high_sword" } ] }
{ "name" : "hjs133", "job" : "warrior", "level" : 30, "equipment" : [ { "weapon" : "high_sword" } ] }
{ "name" : "hjs311", "job" : "magician", "level" : 25, "equipment" : [ { "weapon" : "high_wand" } ] }
{ "name" : "hjs411", "job" : "magician", "level" : 22, "equipment" : [ { "weapon" : "high_wand" } ] }
{ "name" : "hjs115", "job" : "archer", "level" : 31, "equipment" : [ { "weapon" : "high_bow" } ] }
{ "name" : "hjs116", "job" : "archer", "level" : 20, "equipment" : [ { "weapon" : "high_bow" } ] }
{ "name" : "hjs141", "job" : "assassin", "level" : 20, "equipment" : [ { "weapon" : "high_dagger" } ] }
{ "name" : "hjs334", "job" : "gunner", "level" : 20, "equipment" : [ { "weapon" : "high_gun" } ] }
{ "name" : "hjs335", "job" : "gunner", "level" : 26, "equipment" : [ { "weapon" : "high_gun" } ] }
{ "name" : "hjs336", "job" : "gunner", "level" : 28, "equipment" : [ { "weapon" : "high_gun" } ] }
{ "name" : "hjs338", "job" : "gunner", "level" : 32, "equipment" : [ { "weapon" : "high_gun" } ] }

5. 레벨이 25 이상인 캐릭터에게 무기인 폭탄과 악세서리인 폭탄링을 추가한 후
캐릭터의 이름, 직업, 레벨, 무기를 출력하시오(쿼리문 2개)
(추가할 때는 {"weapon":"bomb","ring":"bomb_ring"} 이런식으로 추가해주면 된다.)
db.games.update({level:{$gte:25}},{$push: {equipment : {"weapon":"bomb","ring":"bomb_ring"}}}, {multi : true});
db.games.find({level:{$gte:25}},{name:1, job:1, level:1, "equipment.weapon":1, _id:0})

{ "name" : "hjs133", "job" : "warrior", "level" : 30, "equipment" : [ { "weapon" : "high_sword" }, { "weapon" : "bomb" } ] }
{ "name" : "hjs311", "job" : "magician", "level" : 25, "equipment" : [ { "weapon" : "high_wand" }, { "weapon" : "bomb" } ] }
{ "name" : "hjs115", "job" : "archer", "level" : 31, "equipment" : [ { "weapon" : "high_bow" }, { "weapon" : "bomb" } ] }
{ "name" : "hjs335", "job" : "gunner", "level" : 26, "equipment" : [ { "weapon" : "high_gun" }, { "weapon" : "bomb" } ] }
{ "name" : "hjs336", "job" : "gunner", "level" : 28, "equipment" : [ { "weapon" : "high_gun" }, { "weapon" : "bomb" } ] }
{ "name" : "hjs338", "job" : "gunner", "level" : 32, "equipment" : [ { "weapon" : "high_gun" }, { "weapon" : "bomb" } ] }

6. 스킬트리 중에서 powerslash, lightning, firearrow, shadow, powergun중에서 하나를 포함하고 있는
캐릭터의 이름, 직업, 레벨, 스킬을 출력하시오
단 한개도 없을 경우 "해당되는 캐릭터가 없습니다."를 출력해야합니다.
let myCursor = db.games.find({skill : { $in : ["powerslash","lightning","firearrow","shadow","powergun"]}},{name:1, job:1, level:1, skill:1, _id:0})
let count=0
while(myCursor.hasNext()){
	doc=myCursor.next();
	printjson(doc);
	count++;
} if(count==0){
print("해당되는 캐릭터가 없습니다.");
}

{
        "name" : "hjs122",
        "job" : "warrior",
        "level" : 20,
        "skill" : [
                "stab",
                "swing",
                "powerslash"
        ]
}
{
        "name" : "hjs133",
        "job" : "warrior",
        "level" : 30,
        "skill" : [
                "stab",
                "swing",
                "powerslash",
                "deathblow"
        ]
}
{
        "name" : "hjs211",
        "job" : "magician",
        "level" : 12,
        "skill" : [
                "energybolt",
                "heal",
                "lightning"
        ]
}
{
        "name" : "hjs311",
        "job" : "magician",
        "level" : 25,
        "skill" : [
                "energybolt",
                "heal",
                "lightning",
                "explosion"
        ]
}
{
        "name" : "hjs411",
        "job" : "magician",
        "level" : 22,
        "skill" : [
                "energybolt",
                "heal",
                "lightning",
                "explosion"
        ]
}
{
        "name" : "hjs511",
        "job" : "magician",
        "level" : 15,
        "skill" : [
                "energybolt",
                "heal",
                "lightning"
        ]
}
{
        "name" : "hjs115",
        "job" : "archer",
        "level" : 31,
        "skill" : [
                "shot",
                "doubleshot",
                "firearrow",
                "icearrow"
        ]
}
{
        "name" : "hjs116",
        "job" : "archer",
        "level" : 20,
        "skill" : [
                "shot",
                "doubleshot",
                "firearrow"
        ]
}
{
        "name" : "hjs141",
        "job" : "assassin",
        "level" : 20,
        "skill" : [
                "stab",
                "speedup",
                "shadow"
        ]
}
{
        "name" : "hjs151",
        "job" : "assassin",
        "level" : 18,
        "skill" : [
                "stab",
                "speedup",
                "shadow"
        ]
}
{
        "name" : "hjs161",
        "job" : "assassin",
        "level" : 17,
        "skill" : [
                "stab",
                "speedup",
                "shadow"
        ]
}
{
        "name" : "hjs338",
        "job" : "gunner",
        "level" : 32,
        "skill" : [
                "fire",
                "doublefire",
                "lightninggun",
                "powergun"
        ]
}

7. 레벨이 15이하인 캐릭터를 삭제하고 남아있는 캐릭터의
이름, 직업,  체력, 마력, 레벨을 출력하시오(쿼리 2개)
db.games.remove({level:{$lte:15}})
db.games.find({},{name:1, job:1, hp:1, mp:1, level:1, _id:0})

{ "name" : "hjs122", "job" : "warrior", "hp" : 10000, "mp" : 2500, "level" : 20 }
{ "name" : "hjs133", "job" : "warrior", "hp" : 15000, "mp" : 4000, "level" : 30 }
{ "name" : "hjs311", "job" : "magician", "hp" : 5000, "mp" : 12000, "level" : 25 }
{ "name" : "hjs411", "job" : "magician", "hp" : 4300, "mp" : 10000, "level" : 22 }
{ "name" : "hjs114", "job" : "archer", "hp" : 5000, "mp" : 5200, "level" : 18 }
{ "name" : "hjs115", "job" : "archer", "hp" : 7900, "mp" : 8500, "level" : 31 }
{ "name" : "hjs116", "job" : "archer", "hp" : 5300, "mp" : 5500, "level" : 20 }
{ "name" : "hjs141", "job" : "assassin", "hp" : 6700, "mp" : 4900, "level" : 20 }
{ "name" : "hjs151", "job" : "assassin", "hp" : 6100, "mp" : 4400, "level" : 18 }
{ "name" : "hjs161", "job" : "assassin", "hp" : 5900, "mp" : 4200, "level" : 17 }
{ "name" : "hjs334", "job" : "gunner", "hp" : 4800, "mp" : 5700, "level" : 20 }
{ "name" : "hjs335", "job" : "gunner", "hp" : 5400, "mp" : 6700, "level" : 26 }
{ "name" : "hjs336", "job" : "gunner", "hp" : 5900, "mp" : 7200, "level" : 28 }
{ "name" : "hjs338", "job" : "gunner", "hp" : 6500, "mp" : 8100, "level" : 32 }

8. NoSQL의 종류를 4가지 적으시오
정답 : 키-값 데이터베이스, 도큐먼트 데이터베이스, 칼럼 패밀리 데이터베이스,그래프 데이터베이스

9. NoSQL의 특징 중 옳지 않은 것은?
1. MongoDB는 도큐먼트 데이터베이스이다.
2. NoSQL은 Scale-Up의 형태로 DB를 증설한다.
3. 대용량 데이터를 처리할 수 있는 고성능 데이터베이스이다.
4. 확장성이 뛰어나며 유연성이 있다.
5. 도큐먼트 데이터베이스는 필드와 값의 형태로 구성된 데이터를 JSON 포맷으로 관리한다.
정답 : 2
Scale-Up은 관계형 DB이고 NoSQL은 Scale-Out 형태로 여러 DB 시스템을 추가한다.

10. SQL과 NoSQL을 비교하는 설명으로 옳지 않은 것은?
1. SQL에서 Table은 NoSQL에서 Collection을 말한다.
2. SQL에서 행은 NoSQL에서 Document를 말한다.
3. SQL에서 컬럼은 NoSQL에서 Field를 말한다.
4. 데이터베이스가 아직 생성되어 있지 않을 경우 use 명령어를 사용하면 자동생성이 가능하다.
5. Collection을 생성하지 않은 상태에서 insert 명령어를 실행하면 오류가 발생한다.
정답 : 5
insert명령어를 실행하면 자동으로 Collection 생성 후 데이터를 삽입해준다.








